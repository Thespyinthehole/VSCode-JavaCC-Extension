$schema: 'https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json'
name: javacc
patterns:
  
  # Options { ... }
  - begin: '\b(options)\b\s*{'
    beginCaptures:
      '1':
        name: keyword.other.javacc.options
    patterns:
        # JavaCC option values (I only implemented true/false)
      - name: constant.language.javacc.options.values
        match: \b(true|false)\b
      - name: keyword.control.javacc.options.options
        # List of JavaCC options
        # https://javacc.github.io/javacc/documentation/grammar.html#javacc-options
        match: >-
          \b(BUILD_PARSER|BUILD_TOKEN_MANAGER|CACHE_TOKENS|CHOICE_AMBIGUITY_CHECK|COMMON_TOKEN_ACTION|DEBUG_LOOKAHEAD|DEBUG_PARSER|DEBUG_TOKEN_MANAGER|ERROR_REPORTING|FORCE_LA_CHECK|IGNORE_CASE|JAVA_UNICODE_ESCAPE|LOOKAHEAD|OTHER_AMBIGUITY_CHECK|OUTPUT_DIRECTORY|SANITY_CHECK|STATIC|SUPPORT_CLASS_VISIBILITY_PUBLIC|TOKEN_EXTENDS|TOKEN_FACTORY|TOKEN_MANAGER_USES_PARSER|UNICODE_INPUT|USER_CHAR_STREAM|USER_TOKEN_MANAGER)\b
    end: '}'
    name: javaccoptions
    contentName: storage.modifier.package.java.javaccoptionsthing

  # PARSER_BEGIN(Name) JAVA_CODE PARSER_END(Name)
  - begin: '\b(PARSER_BEGIN)\b\(([A-Za-z_]+)\)'
    beginCaptures:
      '1':
        name: keyword.other.parserbeginclass
      '2':
        name: entity.name.class.parserbeginclass
    patterns:
      - include: source.java
    end: '\b(PARSER_END)\b\(([A-Za-z_]+)\)'
    endCaptures:
      # PARSER_END
      '1':
        name: keyword.other.parserbeginclass
      # The thing in the brackets after PARSER_END
      '2':
        name: entity.name.class.parserbeginclass
    contentName: source.java

  # Those function() : { CODE } bits, make 'CODE' Java syntax
  - begin: '\)\s*:\s*{'
    patterns:
      - include: source.java
    end: '}'
  - include: '#tokens'
  - include: '#comments'
  - include: '#strings'
  # Ignore keywords for now
  #- include: '#keywords'
repository:

  # This parses the TOKEN : { < ... > } and SKIP thingies
  tokens:
    patterns:
      # TOKEN and SKIP keywords
      - match: '\bTOKEN|SKIP\b'
        name: keyword.other.javacc.token

      # The stuff inside the curly brackets
      - begin: '{'
        patterns: 
          - match: "<"
            name: keyword.control.leftchevron

          # Make the name look cool and every other symbol which is used
          # in regex look regex coloured
          - patterns:
            - match: '[A-Z_]+'
              name: entity.name.class.tokenname
            - match: '(\[|\]|\(|\)|-|,|\*|\+|\~)'
              name: 'string.regexp.yeet'
          
          # Strings
          - match: ":"
          - include: '#strings'
          - match: ">"
            name: 'keyword.control.rightchevron'

          # | Or symbol
          - match: "\\|"
            name: "keyword.control.pipe"
        end: '}'
  keywords:
    patterns:
      - name: keyword.control.javacc
        match: >-
          \b(TOKEN|SKIP|EOF|throws|public|private|class|static|import|return|while|abstract|extends|try|catch|if|else)\b
      - name: entity.name.class.javacc2
        match: '<\s*[A-Z_]+\s*:'
      - name: entity.name.class.token
        match: '<\s*[A-Z_]+\s*>'
      - name: keyword.operator.javacc
        match: '\+|\||-|/|\*|:|<|>|=|,|\?'
      - name: constant.character.javacc
        match: ''
      - name: invalid.illegal.javacc
        match: ''
      - name: storage.type.javacc
        match: \b(void|String|int|char|boolean|float|double)\b
      - name: entity.name.function.javacc
        match: ;
      - name: constant.language.javacc
        match: this|new|null
      - name: constant.numeric.javacc
        match: '[0-9]+(\.[0-9]*)?f?'
      - name: support.function.javacc
        match: ''
      - {}
  strings:
    name: string.quoted.double.fortelangprime
    begin: '"'
    end: '"'
    patterns:
      - name: constant.character.escape.fortelangprime
        match: \\.
  comments:
    patterns:
      - name: comment.line.number-sign.javacc
        begin: //
        end: |+

      - name: comment.block.javacc
        begin: /\*
        end: \*/
scopeName: source.javacc
